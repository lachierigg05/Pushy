#!/bin/dash

# If the .pushy repo hasnt been initialised then throw 
# uninitalised error and exit
if [ ! -d ".pushy" ];
then
    echo "$0: error: pushy repository directory .pushy not found" 
    exit 1
fi

# Boolean variables for readability
FALSE=0
TRUE=1

option_a_checked=$FALSE;
message="" 

# Initial argument check 
if [ "$1" = "-m" ]; 
then
    if [ "$#" != 2 ] || [ -z "$(echo "$2" | tr -d '[:space:]')" ]; 
    then 
        echo "usage: $0 [-a] -m commit-message"
        exit 1
    fi
    message="$2"
elif [ "$1" = "-a" ] && [ "$2" = "-m" ] && [ "$#" -eq 3 ]; 
then 
    # Checks for valid message in args 
    if [ -z "$(echo "$3" | tr -d '[:space:]')" ];
    then
        echo "usage: $0 [-a] -m commit-message"
        exit 1
    fi
    
    option_a_checked=$TRUE
    message="$3"
    
elif [ "$1" = "-am" ] && [ "$#" -eq 2 ]; 
then
    # Checks for valid message in args 
    if [ -z "$(echo "$3" | tr -d '[:space:]')" ];
    then
        echo "usage: $0 [-a] -m commit-message"
        exit 1
    fi
    
    option_a_checked=$TRUE
    message="$2"

else 
    echo "usage: $0 [-a] -m commit-message"
    exit 1
fi

if [ "$option_a_checked" = 1 ];
then
    for file in *
    do
        if [ -f .pushy/index/"$file" ];
        then
            cp "$file" .pushy/index/"$file"
        fi
    done
fi

curr_commit_num=$(cat .pushy/commits/commit_number.txt)
prev_commit_num=$((curr_commit_num - 1))

if [ $prev_commit_num -eq -1 ];
then
    if [ -z "$(ls .pushy/index)" ];
    then
        echo "nothing to commit"
        exit 0
    fi
elif diff -qr .pushy/index ".pushy/commits/$prev_commit_num" --exclude="message.txt" >/dev/null
then
    echo "nothing to commit"
    exit 0
fi

new_commit=.pushy/commits/$curr_commit_num


mkdir "$new_commit"
if [ "$(ls -A .pushy/index)" ];
then
    cp .pushy/index/* "$new_commit" 2>/dev/null
    cp .pushy/index/* .pushy
fi

for file in .pushy/*;
do
    filename=$(echo "$file" | cut -d "/" -f2)
    if [ -f "$file" ];
    then 
        if [ ! -f .pushy/index/"$filename" ];
        then 
            rm "$file"
        fi
    fi
done

echo "$message" >> "$new_commit"/message.txt

echo "Committed as commit $curr_commit_num"
echo $((curr_commit_num+1)) >>.pushy/new_commit_number.txt
cat .pushy/new_commit_number.txt > .pushy/commits/commit_number.txt
rm .pushy/new_commit_number.txt